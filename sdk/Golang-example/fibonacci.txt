### (Environment setup)
To get started, we need to install the followings( Tinygo, Golang, Wasmtime):


### Golang:
Go to https://go.dev/  (try to install between 1.15 to 1.17 , cause tinygo supports golang of these versions only)
follow the instructions given there


### Tinygo:
Its a Go compiler and to install this go to https://tinygo.org/getting-started/install/ and follow the instructions given there


### Wasmtime:
Go to https://wasmtime.dev/ 


### There are two things to do here, 
(1) compile source code in high level languages, for examples Golang, to WASM, 
(2) execute the WASM via some engines, for examples, Wasmtime.


### Part 1 (compile source code in high level languages)


1. For that first step lets build simple go program that creates fibonacci sequence of an integer input.


2.Create a folder "Golang-to-WASI" :
   mkdir Golang-to-WASI
   cd Golang-to-WASI


3. Create a file named main.go :
   touch main.go


4. Add the program of febonacci there :
   // Simple Program to calculate fibonacci of input

	package main

	import "fmt"
	func FibonacciRecursion(n int) int 
        {
	    if n <= 1 {
        		return n
       		      }
	    return FibonacciRecursion(n-1) + FibonacciRecursion(n-2)
	}

	func main()
        {
       fmt.Print("Enter number : ")
       var n int
       fmt.Scanln(&n)
       fmt.Println("Fibonacci of", n , "is", FibonacciRecursion(n));
        }



5. Compile to WASM using the following commandn:
   tinygo build -wasm-abi=generic -target=wasi -o main.wasm main.go


6. The wasm file created in the folder:
   wasmtime main.wasm




### Part 2 (execute the WASM via some engines)
    
1. Executing using Wasmtime :
   wasmtime main.wasm
   









